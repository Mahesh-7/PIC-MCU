

HI-TECH Software PIC LITE Macro Assembler V9.71a build 6446 
                                                                                               Thu Oct 22 16:25:24 2020

HI-TECH Software Omniscient Code Generator (Lite mode) build 6446
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 6446"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNROOT	_main
    43                           	global	_temp
    44                           	global	_index
    45                           	global	_PORTB
    46                           psect	maintext,global,class=CODE,delta=2
    47                           global __pmaintext
    48  07E4                     __pmaintext:
    49  0006                     _PORTB	set	6
    50                           	global	_PORTC
    51  0007                     _PORTC	set	7
    52                           	global	_TRISB
    53  0086                     _TRISB	set	134
    54                           	global	_TRISC
    55  0087                     _TRISC	set	135
    56                           	file	"led.as"
    57                           	line	#
    58                           psect cinit,class=CODE,delta=2
    59                           global start_initialization
    60  07D6                     start_initialization:
    61                           
    62                           psect	bssCOMMON,class=COMMON,space=1
    63                           global __pbssCOMMON
    64  0070                     __pbssCOMMON:
    65  0070                     _index:
    66  0070                            ds      1
    67                           
    68                           psect	bssBANK0,class=BANK0,space=1
    69                           global __pbssBANK0
    70  0020                     __pbssBANK0:
    71  0020                     _temp:
    72  0020                            ds      30
    73                           
    74                           psect clrtext,class=CODE,delta=2
    75                           global clear_ram
    76                           ;	Called with FSR containing the base address, and
    77                           ;	W with the last address+1
    78  07CE                     clear_ram:
    79  07CE  0064               	clrwdt			;clear the watchdog before getting into this loop
    80  07CF                     clrloop:
    81  07CF  0180               	clrf	indf		;clear RAM location pointed to by FSR
    82  07D0  0A84               	incf	fsr,f		;increment pointer
    83  07D1  0604               	xorwf	fsr,w		;XOR with final address
    84  07D2  1903               	btfsc	status,2	;have we reached the end yet?
    85  07D3  3400               	retlw	0		;all done for this memory range, return
    86  07D4  0604               	xorwf	fsr,w		;XOR again to restore value
    87  07D5  2FCF               	goto	clrloop		;do the next byte
    88                           
    89                           ; Clear objects allocated to COMMON
    90                           psect cinit,class=CODE,delta=2
    91  07D6  01F0               	clrf	((__pbssCOMMON)+0)&07Fh
    92                           ; Clear objects allocated to BANK0
    93                           psect cinit,class=CODE,delta=2
    94  07D7  1383               	bcf	status, 7	;select IRP bank0
    95  07D8  3020               	movlw	low(__pbssBANK0)
    96  07D9  0084               	movwf	fsr
    97  07DA  303E               	movlw	low((__pbssBANK0)+01Eh)
    98  07DB  120A  118A  27CE   	fcall	clear_ram
              120A  118A         
    99                           psect cinit,class=CODE,delta=2
   100                           global end_of_initialization
   101                           
   102                           ;End of C runtime variable initialization code
   103                           
   104  07E0                     end_of_initialization:
   105  07E0  0183               clrf status
   106  07E1  120A  118A  2FE4   ljmp _main	;jump to C main() function
   107                           psect	cstackCOMMON,class=COMMON,space=1
   108                           global __pcstackCOMMON
   109  0000                     __pcstackCOMMON:
   110                           	global	?_main
   111  0000                     ?_main:	; 0 bytes @ 0x0
   112                           	global	??_main
   113  0000                     ??_main:	; 0 bytes @ 0x0
   114 ;;Data sizes: Strings 0, constant 0, data 0, bss 31, persistent 0 stack 0
   115 ;;Auto spaces:   Size  Autos    Used
   116 ;; COMMON          14      0       1
   117 ;; BANK0           80      0      30
   118 ;; BANK1           80      0       0
   119 ;; BANK3           96      0       0
   120 ;; BANK2           96      0       0
   121                           
   122 ;;
   123 ;; Pointer list with targets:
   124                           
   125                           
   126                           
   127 ;;
   128 ;; Critical Paths under _main in COMMON
   129 ;;
   130 ;;   None.
   131 ;;
   132 ;; Critical Paths under _main in BANK0
   133 ;;
   134 ;;   None.
   135 ;;
   136 ;; Critical Paths under _main in BANK1
   137 ;;
   138 ;;   None.
   139 ;;
   140 ;; Critical Paths under _main in BANK3
   141 ;;
   142 ;;   None.
   143 ;;
   144 ;; Critical Paths under _main in BANK2
   145 ;;
   146 ;;   None.
   147                           
   148 ;;
   149 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   150 ;;
   151                           
   152 ;;
   153 ;;Call Graph Tables:
   154 ;;
   155 ;; ---------------------------------------------------------------------------------
   156 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   157 ;; ---------------------------------------------------------------------------------
   158 ;; (0) _main                                                 0     0      0       0
   159 ;; ---------------------------------------------------------------------------------
   160 ;; Estimated maximum stack depth 0
   161 ;; ---------------------------------------------------------------------------------
   162                           
   163 ;; Call Graph Graphs:
   164                           
   165 ;; _main (ROOT)
   166 ;;
   167                           
   168 ;; Address spaces:
   169                           
   170 ;;Name               Size   Autos  Total    Cost      Usage
   171 ;;BITCOMMON            E      0       0       0        0.0%
   172 ;;EEDATA             100      0       0       0        0.0%
   173 ;;NULL                 0      0       0       0        0.0%
   174 ;;CODE                 0      0       0       0        0.0%
   175 ;;COMMON               E      0       1       1        7.1%
   176 ;;BITSFR0              0      0       0       1        0.0%
   177 ;;SFR0                 0      0       0       1        0.0%
   178 ;;BITSFR1              0      0       0       2        0.0%
   179 ;;SFR1                 0      0       0       2        0.0%
   180 ;;STACK                0      0       0       2        0.0%
   181 ;;ABS                  0      0      1F       3        0.0%
   182 ;;BITBANK0            50      0       0       4        0.0%
   183 ;;BITSFR3              0      0       0       4        0.0%
   184 ;;SFR3                 0      0       0       4        0.0%
   185 ;;BANK0               50      0      1E       5       37.5%
   186 ;;BITSFR2              0      0       0       5        0.0%
   187 ;;SFR2                 0      0       0       5        0.0%
   188 ;;BITBANK1            50      0       0       6        0.0%
   189 ;;BANK1               50      0       0       7        0.0%
   190 ;;BITBANK3            60      0       0       8        0.0%
   191 ;;BANK3               60      0       0       9        0.0%
   192 ;;BITBANK2            60      0       0      10        0.0%
   193 ;;BANK2               60      0       0      11        0.0%
   194 ;;DATA                 0      0      1F      12        0.0%
   195                           
   196                           	global	_main
   197                           psect	maintext
   198                           
   199 ;; *************** function _main *****************
   200 ;; Defined at:
   201 ;;		line 13 in file "../../app/inc/..\..\platform\..\core\drv\uart\inc\uart_driver.h"
   202 ;; Parameters:    Size  Location     Type
   203 ;;		None
   204 ;; Auto vars:     Size  Location     Type
   205 ;;		None
   206 ;; Return value:  Size  Location     Type
   207 ;;		None               void
   208 ;; Registers used:
   209 ;;		wreg, status,2
   210 ;; Tracked objects:
   211 ;;		On entry : 17F/0
   212 ;;		On exit  : 0/0
   213 ;;		Unchanged: 0/0
   214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   215 ;;      Params:         0       0       0       0       0
   216 ;;      Locals:         0       0       0       0       0
   217 ;;      Temps:          0       0       0       0       0
   218 ;;      Totals:         0       0       0       0       0
   219 ;;Total ram usage:        0 bytes
   220 ;; This function calls:
   221 ;;		Nothing
   222 ;; This function is called by:
   223 ;;		Startup code after reset
   224 ;; This function uses a non-reentrant model
   225 ;;
   226                           psect	maintext
   227                           	file	"../../app/inc/..\..\platform\..\core\drv\uart\inc\uart_driver.h"
   228                           	line	13
   229                           	global	__size_of_main
   230  001C                     	__size_of_main	equ	__end_of_main-_main
   231                           	
   232  07E4                     _main:	
   233                           	opt	stack 8
   234                           ; Regs used in _main: [wreg+status,2]
   235                           	line	15
   236                           	
   237  07E4                     l952:	
   238                           ;..\..\platform\..\core\drv\uart\inc\uart_driver.h: 15: TRISB=0X00;
   239  07E4  1683               	bsf	status, 5	;RP0=1, select bank1
   240  07E5  1303               	bcf	status, 6	;RP1=0, select bank1
   241  07E6  0186               	clrf	(134)^080h	;volatile
   242                           	line	16
   243                           ;..\..\platform\..\core\drv\uart\inc\uart_driver.h: 16: PORTB=0X00;
   244  07E7  1283               	bcf	status, 5	;RP0=0, select bank0
   245  07E8  1303               	bcf	status, 6	;RP1=0, select bank0
   246  07E9  0186               	clrf	(6)	;volatile
   247                           	line	17
   248                           	
   249  07EA                     l954:	
   250                           ;..\..\platform\..\core\drv\uart\inc\uart_driver.h: 17: TRISC |= (1<<0);
   251  07EA  1683               	bsf	status, 5	;RP0=1, select bank1
   252  07EB  1303               	bcf	status, 6	;RP1=0, select bank1
   253  07EC  1407               	bsf	(135)^080h+(0/8),(0)&7	;volatile
   254                           	line	19
   255                           ;..\..\platform\..\core\drv\uart\inc\uart_driver.h: 19: while(1)
   256                           	
   257  07ED                     l568:	
   258                           	line	21
   259                           ;..\..\platform\..\core\drv\uart\inc\uart_driver.h: 20: {
   260                           ;..\..\platform\..\core\drv\uart\inc\uart_driver.h: 21: while(!(PORTC&(1<<0)));
   261  07ED  2FEE               	goto	l569
   262                           	
   263  07EE                     l570:	
   264                           	
   265  07EE                     l569:	
   266  07EE  1283               	bcf	status, 5	;RP0=0, select bank0
   267  07EF  1303               	bcf	status, 6	;RP1=0, select bank0
   268  07F0  1C07               	btfss	(7),(0)&7
   269  07F1  2FF3               	goto	u31
   270  07F2  2FF4               	goto	u30
   271  07F3                     u31:
   272  07F3  2FEE               	goto	l570
   273  07F4                     u30:
   274                           	
   275  07F4                     l571:	
   276                           	line	22
   277                           	
   278  07F4                     l956:	
   279                           ;..\..\platform\..\core\drv\uart\inc\uart_driver.h: 22: PORTB=0Xff;
   280  07F4  30FF               	movlw	(0FFh)
   281  07F5  0086               	movwf	(6)	;volatile
   282                           	line	23
   283                           ;..\..\platform\..\core\drv\uart\inc\uart_driver.h: 23: while((PORTC&(1<<0)));
   284  07F6  2FF7               	goto	l572
   285                           	
   286  07F7                     l573:	
   287                           	
   288  07F7                     l572:	
   289  07F7  1807               	btfsc	(7),(0)&7
   290  07F8  2FFA               	goto	u41
   291  07F9  2FFB               	goto	u40
   292  07FA                     u41:
   293  07FA  2FF7               	goto	l573
   294  07FB                     u40:
   295                           	
   296  07FB                     l574:	
   297                           	line	24
   298                           	
   299  07FB                     l958:	
   300                           ;..\..\platform\..\core\drv\uart\inc\uart_driver.h: 24: PORTB=0X00;
   301  07FB  0186               	clrf	(6)	;volatile
   302                           	line	27
   303                           	
   304  07FC                     l575:	
   305                           	line	19
   306  07FC  2FED               	goto	l568
   307                           	
   308  07FD                     l576:	
   309                           	line	29
   310                           	
   311  07FD                     l577:	
   312                           	global	start
   313  07FD  120A  118A  2800   	ljmp	start
   314                           	opt stack 0
   315                           GLOBAL	__end_of_main
   316  0800                     	__end_of_main:
   317 ;; =============== function _main ends ============
   318                           
   319                           	signat	_main,88
   320                           psect	maintext
   321                           	global	btemp
   322  007E                     	btemp set 07Eh
   323                           
   324                           	DABS	1,126,2	;btemp
   325                           	global	wtemp0
   326  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.71a build 6446 
Symbol Table                                                                                   Thu Oct 22 16:25:24 2020

                  u30 07F4                    u31 07F3                    u40 07FB                    u41 07FA  
                  fsr 0004                   l570 07EE                   l571 07F4                   l572 07F7  
                 l573 07F7                   l574 07FB                   l575 07FC                   l576 07FD  
                 l568 07ED                   l577 07FD                   l569 07EE                   l952 07E4  
                 l954 07EA                   l956 07F4                   l958 07FB                   indf 0000  
                _main 07E4                  _temp 0020                  btemp 007E                  start 0000  
               ?_main 0000                 _PORTB 0006                 _PORTC 0007                 _TRISB 0086  
               _TRISC 0087                 _index 0070                 status 0003                 wtemp0 007E  
        __end_of_main 0800                ??_main 0000                clrloop 07CF        __pcstackCOMMON 0000  
          __pbssBANK0 0020            __pmaintext 07E4  end_of_initialization 07E0   start_initialization 07D6  
         __pbssCOMMON 0070         __size_of_main 001C              clear_ram 07CE  
